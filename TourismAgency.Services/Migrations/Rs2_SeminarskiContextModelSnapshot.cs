// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourismAgency.Services.Database;

#nullable disable

namespace TourismAgency.Services.Migrations
{
    [DbContext(typeof(Rs2_SeminarskiContext))]
    partial class Rs2_SeminarskiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TourismAgency.Services.Database.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Drzava", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.DrzavaNu", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("DrzavaNU", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Grupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BrojSlobodnihMjesta")
                        .HasColumnType("int")
                        .HasColumnName("broj slobodnih mjesta");

                    b.Property<int?>("BrojZauzetihMjesta")
                        .HasColumnType("int")
                        .HasColumnName("broj zauzetih mjesta");

                    b.Property<string>("OznakaGrupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int")
                        .HasColumnName("Putovanje_Id");

                    b.Property<int?>("VodicId")
                        .HasColumnType("int")
                        .HasColumnName("vodic_id");

                    b.HasKey("Id");

                    b.HasIndex("PutovanjeId");

                    b.HasIndex("VodicId");

                    b.ToTable("Grupe", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Grupe2", b =>
                {
                    b.Property<int?>("BrojSlobodnihMjesta")
                        .HasColumnType("int")
                        .HasColumnName("broj slobodnih mjesta");

                    b.Property<int?>("BrojZauzetihMjesta")
                        .HasColumnType("int")
                        .HasColumnName("broj zauzetih mjesta");

                    b.Property<string>("OznakaGrupe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VodicId")
                        .HasColumnType("int")
                        .HasColumnName("vodic_id");

                    b.ToTable("Grupe2", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("Korisnik_ID");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int")
                        .HasColumnName("Uloga_ID");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int")
                        .HasColumnName("Rezervacija_Id");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TuristId")
                        .HasColumnType("int")
                        .HasColumnName("Turist_Id");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("VodicId")
                        .HasColumnType("int")
                        .HasColumnName("Vodic_Id");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("TuristId");

                    b.HasIndex("VodicId");

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Korisnik2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int")
                        .HasColumnName("Rezervacija_Id");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TuristId")
                        .HasColumnType("int")
                        .HasColumnName("Turist_Id");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("VodicId")
                        .HasColumnType("int")
                        .HasColumnName("Vodic_Id");

                    b.HasKey("Id");

                    b.ToTable("Korisnik2", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Lokacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int")
                        .HasColumnName("Putovanje_Id");

                    b.Property<int?>("SmjestajId")
                        .HasColumnType("int")
                        .HasColumnName("Smjestaj_id");

                    b.HasKey("Id");

                    b.HasIndex("PutovanjeId");

                    b.HasIndex("SmjestajId");

                    b.ToTable("Lokacija", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.LokacijaNu", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int")
                        .HasColumnName("Putovanje_Id");

                    b.Property<int?>("SmjestajId")
                        .HasColumnType("int")
                        .HasColumnName("Smjestaj_id");

                    b.HasKey("Id");

                    b.ToTable("LokacijaNU", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Notifikacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("Korisnik_Id");

                    b.Property<string>("Naslov")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Osoba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("osoba");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Notifikacija", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Notifikacija2", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("Korisnik_Id");

                    b.Property<string>("Naslov")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Osoba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("osoba");

                    b.HasKey("Id");

                    b.ToTable("Notifikacija2", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.PlanAktivnosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int")
                        .HasColumnName("Putovanje_ID");

                    b.Property<TimeSpan?>("Vrijeme")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("PutovanjeId");

                    b.ToTable("Plan_Aktivnosti", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.PlanAktivnosti2", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Datum")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int")
                        .HasColumnName("Putovanje_ID");

                    b.Property<string>("Vrijeme")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Plan_Aktivnosti2", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Putovanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DrzavaId")
                        .HasColumnType("int")
                        .HasColumnName("Drzava_Id");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Polazak")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Putovanje", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Putovanje2", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("DrzavaId")
                        .HasColumnType("int")
                        .HasColumnName("Drzava_Id");

                    b.Property<int?>("GrupaId")
                        .HasColumnType("int")
                        .HasColumnName("Grupa_Id");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Polazak")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Putovanje2", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("BrojLjudi")
                        .HasColumnType("int")
                        .HasColumnName("Broj ljudi");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int")
                        .HasColumnName("Putovanje_ID");

                    b.Property<int?>("SmjestajId")
                        .HasColumnType("int")
                        .HasColumnName("Smjestaj_Id");

                    b.HasKey("Id");

                    b.HasIndex("PutovanjeId");

                    b.HasIndex("SmjestajId");

                    b.ToTable("Rezervacija", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Smjestaj", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BrojZvijezdica")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Broj Zvijezdica");

                    b.Property<string>("NazivHotela")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slika")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Smjestaj", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Turist", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("BrojOdrađenihPutovanja")
                        .HasColumnType("int")
                        .HasColumnName("Broj Odrađenih putovanja");

                    b.Property<int?>("BrojPutovanja")
                        .HasColumnType("int")
                        .HasColumnName("Broj putovanja");

                    b.Property<int?>("GrupaId")
                        .HasColumnType("int")
                        .HasColumnName("Grupa_Id");

                    b.Property<string>("PopustStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("popust status");

                    b.Property<string>("TrenutnoPutovanje")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("trenutno putovanje");

                    b.HasKey("Id");

                    b.HasIndex("GrupaId");

                    b.ToTable("Turist", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Uloge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Uloge", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Vodic", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("BrojObavljenihZaduzenja")
                        .HasColumnType("int")
                        .HasColumnName("Broj obavljenih Zaduzenja");

                    b.Property<int?>("BrojZaduzenih")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vodic", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Zaduzenja", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("GrupaId")
                        .HasColumnType("int")
                        .HasColumnName("Grupa_Id");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PutovanjeId")
                        .HasColumnType("int")
                        .HasColumnName("Putovanje_Id");

                    b.Property<int?>("VodicId")
                        .HasColumnType("int")
                        .HasColumnName("Vodic_Id");

                    b.HasKey("Id");

                    b.HasIndex("GrupaId");

                    b.HasIndex("PutovanjeId");

                    b.HasIndex("VodicId");

                    b.ToTable("Zaduzenja", (string)null);
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Grupe", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Putovanje", "Putovanje")
                        .WithMany("Grupes")
                        .HasForeignKey("PutovanjeId");

                    b.HasOne("TourismAgency.Services.Database.Vodic", "Vodic")
                        .WithMany("Grupes")
                        .HasForeignKey("VodicId");

                    b.Navigation("Putovanje");

                    b.Navigation("Vodic");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.KorisniciUloge", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FK_KorisniciUloge_Korisnici_ID");

                    b.HasOne("TourismAgency.Services.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("UlogaId")
                        .IsRequired()
                        .HasConstraintName("FK_KorisniciUloge_Uloge_ID");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Korisnik", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Rezervacija", "Rezervacija")
                        .WithMany("Korisniks")
                        .HasForeignKey("RezervacijaId");

                    b.HasOne("TourismAgency.Services.Database.Turist", "Turist")
                        .WithMany("Korisniks")
                        .HasForeignKey("TuristId");

                    b.HasOne("TourismAgency.Services.Database.Vodic", "Vodic")
                        .WithMany("Korisniks")
                        .HasForeignKey("VodicId");

                    b.Navigation("Rezervacija");

                    b.Navigation("Turist");

                    b.Navigation("Vodic");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Lokacija", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Putovanje", "Putovanje")
                        .WithMany("Lokacijas")
                        .HasForeignKey("PutovanjeId")
                        .HasConstraintName("FK_Lokacija_Putovanje_PutovanjeId");

                    b.HasOne("TourismAgency.Services.Database.Smjestaj", "Smjestaj")
                        .WithMany("Lokacijas")
                        .HasForeignKey("SmjestajId");

                    b.Navigation("Putovanje");

                    b.Navigation("Smjestaj");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Notifikacija", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Notifikacijas")
                        .HasForeignKey("KorisnikId");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.PlanAktivnosti", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Putovanje", "Putovanje")
                        .WithMany("PlanAktivnostis")
                        .HasForeignKey("PutovanjeId")
                        .HasConstraintName("FK_PlanAktivnosti_Putovanje_PutovanjeId");

                    b.Navigation("Putovanje");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Putovanje", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Drzava", "Drzava")
                        .WithMany("Putovanjes")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Putovanje_Drzava_ID");

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Rezervacija", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Putovanje", "Putovanje")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("PutovanjeId")
                        .HasConstraintName("FK_Rezervacija_Putovanje_PutovanjeId");

                    b.HasOne("TourismAgency.Services.Database.Smjestaj", "Smjestaj")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("SmjestajId");

                    b.Navigation("Putovanje");

                    b.Navigation("Smjestaj");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Turist", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Grupe", "Grupa")
                        .WithMany("Turists")
                        .HasForeignKey("GrupaId")
                        .HasConstraintName("FK_Turist_Grupa_Grupa_Id");

                    b.Navigation("Grupa");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Zaduzenja", b =>
                {
                    b.HasOne("TourismAgency.Services.Database.Grupe", "Grupa")
                        .WithMany("Zaduzenjas")
                        .HasForeignKey("GrupaId")
                        .HasConstraintName("FK_Zaduzenja_grupa_Grupa_Id");

                    b.HasOne("TourismAgency.Services.Database.Putovanje", "Putovanje")
                        .WithMany("Zaduzenjas")
                        .HasForeignKey("PutovanjeId")
                        .HasConstraintName("FK_Zaduzenja_Putovanje_PutovanjeId");

                    b.HasOne("TourismAgency.Services.Database.Vodic", "Vodic")
                        .WithMany("Zaduzenjas")
                        .HasForeignKey("VodicId")
                        .HasConstraintName("FK_Zaduzenja_Vodic_ID");

                    b.Navigation("Grupa");

                    b.Navigation("Putovanje");

                    b.Navigation("Vodic");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Drzava", b =>
                {
                    b.Navigation("Putovanjes");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Grupe", b =>
                {
                    b.Navigation("Turists");

                    b.Navigation("Zaduzenjas");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Korisnik", b =>
                {
                    b.Navigation("KorisniciUloges");

                    b.Navigation("Notifikacijas");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Putovanje", b =>
                {
                    b.Navigation("Grupes");

                    b.Navigation("Lokacijas");

                    b.Navigation("PlanAktivnostis");

                    b.Navigation("Rezervacijas");

                    b.Navigation("Zaduzenjas");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Rezervacija", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Smjestaj", b =>
                {
                    b.Navigation("Lokacijas");

                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Turist", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Uloge", b =>
                {
                    b.Navigation("KorisniciUloges");
                });

            modelBuilder.Entity("TourismAgency.Services.Database.Vodic", b =>
                {
                    b.Navigation("Grupes");

                    b.Navigation("Korisniks");

                    b.Navigation("Zaduzenjas");
                });
#pragma warning restore 612, 618
        }
    }
}
